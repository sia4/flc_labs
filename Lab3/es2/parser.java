
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sat Jan 13 16:01:27 CET 2018
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;

/** CUP v0.10k generated parser.
  * @version Sat Jan 13 16:01:27 CET 2018
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\026\000\002\002\004\000\002\003\005\000\002\004" +
    "\004\000\002\004\003\000\002\005\006\000\002\006\005" +
    "\000\002\006\003\000\002\007\007\000\002\007\011\000" +
    "\002\010\004\000\002\010\005\000\002\015\004\000\002" +
    "\015\004\000\002\015\004\000\002\015\004\000\002\015" +
    "\004\000\002\011\004\000\002\011\003\000\002\012\006" +
    "\000\002\013\005\000\002\013\003\000\002\014\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\053\000\004\007\004\001\002\000\004\004\027\001" +
    "\002\000\006\007\ufffe\022\ufffe\001\002\000\006\007\004" +
    "\022\012\001\002\000\004\002\010\001\002\000\004\002" +
    "\001\001\002\000\006\007\uffff\022\uffff\001\002\000\004" +
    "\007\013\001\002\000\004\006\017\001\002\000\006\002" +
    "\ufff0\007\ufff0\001\002\000\006\002\000\007\013\001\002" +
    "\000\006\002\ufff1\007\ufff1\001\002\000\004\023\022\001" +
    "\002\000\006\012\024\013\025\001\002\000\006\012\uffed" +
    "\013\uffed\001\002\000\004\005\023\001\002\000\006\012" +
    "\uffec\013\uffec\001\002\000\004\023\022\001\002\000\006" +
    "\002\uffef\007\uffef\001\002\000\006\012\uffee\013\uffee\001" +
    "\002\000\004\005\032\001\002\000\006\012\ufffb\013\ufffb" +
    "\001\002\000\006\012\053\013\054\001\002\000\004\006" +
    "\033\001\002\000\004\007\034\001\002\000\004\006\035" +
    "\001\002\000\004\010\036\001\002\000\010\006\037\012" +
    "\ufffa\013\ufffa\001\002\000\006\014\040\015\042\001\002" +
    "\000\006\016\052\017\051\001\002\000\006\012\ufff9\013" +
    "\ufff9\001\002\000\010\016\050\017\047\020\046\001\002" +
    "\000\004\010\044\001\002\000\010\011\045\012\ufff8\013" +
    "\ufff8\001\002\000\006\012\ufff7\013\ufff7\001\002\000\004" +
    "\010\ufff2\001\002\000\004\010\ufff3\001\002\000\004\010" +
    "\ufff4\001\002\000\004\010\ufff5\001\002\000\004\010\ufff6" +
    "\001\002\000\004\005\032\001\002\000\006\007\ufffd\022" +
    "\ufffd\001\002\000\006\012\ufffc\013\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\053\000\010\003\006\004\005\005\004\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\010\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\011\014\012\013\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\015\001\001\000\002\001\001\000" +
    "\006\013\017\014\020\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\030\007\027\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\010\040\015" +
    "\042\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\054\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 Tree= new DisegnaAlbero();   }public static DisegnaAlbero Tree;

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 Symbol s=_scanner.next_token(); Tree.push(s.toString(), 0); return s;   }



    // Redefinition of error functions
    public void report_error(String message, Object info) {
        System.err.print("ERROR: Syntax error");
        if (info instanceof Symbol)
            if (((Symbol)info).left != -1){
                int line = (((Symbol)info).left)+1;
                int column = (((Symbol)info).right)+1;
                System.err.print(" (line "+line+", column "+column+"): ");
            } else System.err.print(": ");
        else System.err.print(": ");
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // loan ::= DATE ISBN 
            { parser.Tree.reduce(2,"loan",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*loan*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // loan_list ::= loan 
            { parser.Tree.reduce(1,"loan_list",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*loan_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // loan_list ::= loan_list COMMA loan 
            { parser.Tree.reduce(3,"loan_list",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*loan_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // second_el ::= STRING DPOINTS loan_list SEMICOLON 
            { parser.Tree.reduce(4,"second_el",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*second_el*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // second_part ::= second_el 
            { parser.Tree.reduce(1,"second_part",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*second_part*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // second_part ::= second_part second_el 
            { parser.Tree.reduce(2,"second_part",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*second_part*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // lit_gen ::= LS BO 
            { parser.Tree.reduce(2,"lit_gen",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*lit_gen*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // lit_gen ::= LS SO 
            { parser.Tree.reduce(2,"lit_gen",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*lit_gen*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // lit_gen ::= LS AV 
            { parser.Tree.reduce(2,"lit_gen",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*lit_gen*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // lit_gen ::= LI SO 
            { parser.Tree.reduce(2,"lit_gen",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*lit_gen*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // lit_gen ::= LI AV 
            { parser.Tree.reduce(2,"lit_gen",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*lit_gen*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // codes ::= lit_gen NUMBER LETTER 
            { parser.Tree.reduce(3,"codes",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*codes*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // codes ::= lit_gen NUMBER 
            { parser.Tree.reduce(2,"codes",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*codes*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // book ::= ISBN DPOINTS STRING DPOINTS NUMBER DPOINTS codes 
            { parser.Tree.reduce(7,"book",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*book*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // book ::= ISBN DPOINTS STRING DPOINTS NUMBER 
            { parser.Tree.reduce(5,"book",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*book*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // book_list ::= book 
            { parser.Tree.reduce(1,"book_list",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*book_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // book_list ::= book_list COMMA book 
            { parser.Tree.reduce(3,"book_list",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*book_list*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // first_el ::= STRING SEP_WRITER book_list SEMICOLON 
            { parser.Tree.reduce(4,"first_el",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*first_el*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // first_part ::= first_el 
            { parser.Tree.reduce(1,"first_part",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*first_part*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // first_part ::= first_part first_el 
            { parser.Tree.reduce(2,"first_part",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*first_part*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // prog ::= first_part SEPARATOR second_part 
            { parser.Tree.reduce(3,"prog",1);
              Object RESULT = null;
		 System.out.println("Programm correctly recognized"); 
              CUP$parser$result = new java_cup.runtime.Symbol(1/*prog*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= prog EOF 
            { 
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

